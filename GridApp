classdef gridapp < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        UIFigure                    matlab.ui.Figure
        TextArea                    matlab.ui.control.TextArea
        InputButton                 matlab.ui.control.Button
        CyclepausetimeSliderLabel   matlab.ui.control.Label
        CyclepausetimeSlider        matlab.ui.control.Slider
        ThresholdheightSliderLabel  matlab.ui.control.Label
        ThresholdheightSlider       matlab.ui.control.Slider
        EMGvoltagemVEditFieldLabel  matlab.ui.control.Label
        mvnum                       matlab.ui.control.NumericEditField
        SpeakButton                 matlab.ui.control.Button
        Label_15                    matlab.ui.control.Label
        Phrase0                     matlab.ui.control.EditField
        Label_16                    matlab.ui.control.Label
        Phrase1                     matlab.ui.control.EditField
        Label_17                    matlab.ui.control.Label
        Phrase2                     matlab.ui.control.EditField
        Label_18                    matlab.ui.control.Label
        Phrase3                     matlab.ui.control.EditField
        Label_19                    matlab.ui.control.Label
        Phrase4                     matlab.ui.control.EditField
        Label_20                    matlab.ui.control.Label
        Phrase5                     matlab.ui.control.EditField
        Label_21                    matlab.ui.control.Label
        Phrase6                     matlab.ui.control.EditField
        Label_22                    matlab.ui.control.Label
        Phrase7                     matlab.ui.control.EditField
        Label_23                    matlab.ui.control.Label
        Phrase8                     matlab.ui.control.EditField
        Label_24                    matlab.ui.control.Label
        Phrase9                     matlab.ui.control.EditField
        EMGmvGaugeLabel             matlab.ui.control.Label
        EMGmvGauge                  matlab.ui.control.LinearGauge
        Options_Basic               matlab.ui.control.Label
        Options_Advanced            matlab.ui.control.Label
        Options_Exit                matlab.ui.control.Label
        Options_Cycle               matlab.ui.control.Label
        Advanced_Keys               matlab.ui.control.Image
        Basic_Keys                  matlab.ui.control.Image
        Image                       matlab.ui.control.Image
        EMGinputSwitchLabel         matlab.ui.control.Label
        EMGinputSwitch              matlab.ui.control.Switch
        EMGreadingLampLabel         matlab.ui.control.Label
        ReadyButton                 matlab.ui.control.StateButton
        EMGreadingLamp              matlab.ui.control.Lamp
        BeginButton                 matlab.ui.control.StateButton
        Basic                       matlab.ui.control.UIAxes
        Advanced                    matlab.ui.control.UIAxes
        Options                     matlab.ui.control.UIAxes
    end

    
    properties (Access = public)
        Input = 0
        save = 0;
        Insave = 0;
    end
    
    properties (Access = private)
        R=1;
        Threshold =8;
        Read;
        calibrated = 8;
        a;
        line;
        EMGvoltage;
        t;
        Grid=1;
        opvis;
        bavis;
        advis;
        what;
    end
    
    methods (Access = private)
        
        function ReadEMG(app)
            if strcmp(app.EMGinputSwitch.Value,'On')
                app.EMGvoltage = (readVoltage(app.a,'A0'));
                app.EMGmvGauge.Value = app.EMGvoltage;
                app.mvnum.Value=app.EMGvoltage;
                app.Threshold = app.ThresholdheightSlider.Value;
                app.EMGreadingLamp.Color = 'g';
                if app.EMGvoltage>app.Threshold
                    if app.save == 0
                        app.Input=app.Input + 1;
                    else
                       app.Insave = app.Insave + 1;
                    end
                end
            end
        end
    end


    % Callbacks that handle component events
    methods (Access = private)

        % Code that executes after component creation
        function startupFcn(app)
            
        end

        % Button pushed function: InputButton
        function InputButtonPushed(app, event)
            if app.save == 0
                app.Input=app.Input + 1;
            else
               app.Insave = app.Insave + 1;
            end
        end

        % Value changed function: CyclepausetimeSlider
        function CyclepausetimeSliderValueChanged(app, event)
            app.R = app.CyclepausetimeSlider.Value; 
        end

        % Value changed function: ThresholdheightSlider
        function ThresholdheightSliderValueChanged(app, event)
            app.Threshold = app.ThresholdheightSlider.Value;
        end

        % Value changed function: BeginButton
        function BeginButtonValueChanged(app, event)
    app.Image.Visible = 0;
    app.BeginButton.Visible = 0;

rectrow = @(x1,x2,x3,x4) rectangle(x1,'Position',[x2 x3 x4 1],'FaceColor',[0 .5 .5],'EdgeColor','b','LineWidth',3);

G = [0,1,2,3,4,5,6;7,8,9,10,11,12,13;14,15,16,17,18,19,20;21,22,23,24,25,26,27;28,29,30,31,32,33,34;35,36,37,38,39,40,41;42,43,44,45,46,47,48];
GO = [0,1;2,3];
GA = [0,1,2,3,4,5;6,7,8,9,10,11;12,13,14,15,16,17;18,19,20,21,22,23;24,25,26,27,28,29;30,31,32,33,34,35;36,37,38,39,40,41;42,43,44,45,46,47;48,49,50,51,52,53];

                %% Option Grid Visibility %%
                app.opvis=1;
                app.Options.Visible = app.opvis;
                app.Options_Advanced.Visible = app.opvis;
                app.Options_Basic.Visible = app.opvis;
                app.Options_Cycle.Visible = app.opvis;
                app.Options_Exit.Visible = app.opvis;
                
                %% Basic Grid Visibility %%
                app.bavis = 0;
                app.Basic_Keys.Visible = app.bavis;
                app.Basic.Visible = app.bavis;
                
                
                %% ADVANCED GRID VISIBILITY %%
                app.advis = 0;
                app.Advanced_Keys.Visible = app.advis;
                app.Advanced.Visible = app.advis;
                
         
app.ThresholdheightSlider.Value = 8;

if strcmp(app.EMGinputSwitch.Value,'On')
app.TextArea.Value = 'Calibrating.....                                                                                          Adjust Threshold to be reached only when muscle is active';
while app.ReadyButton.Value == 0
    app.a=arduino('COM3','ProMini328_3V','BaudRate',9600);
    app.EMGvoltage = (readVoltage(app.a,'A0'));
    app.EMGmvGauge.Value = app.EMGvoltage;
    app.mvnum.Value=app.EMGvoltage;
    app.EMGreadingLamp.Color = 'g';
    app.Threshold = app.ThresholdheightSlider.Value;
    app.calibrated = app.ThresholdheightSlider.Value;
    pause(0.1)
end       
end

app.ReadyButton.Visible = 0;
bean = 0;
high = 0;
low = 0;
app.Grid = 1;
app.TextArea.Value = '';


 while  app.Input==0
     high = high + 1;
     if high == 15
         app.Threshold = app.calibrated;
         app.ThresholdheightSlider.Value = app.calibrated;
     elseif low == 6
          app.Threshold = app.calibrated;
         app.ThresholdheightSlider.Value = app.calibrated;
     end
      if app.Grid == 1
     %% OPTIONS %%
        for i=1:2
        rectrow(app.Options,0,2-i,2);
        pause(app.R*1.5/2);
        ReadEMG(app);
        pause(app.R*1.5/2);
        ReadEMG(app); 
        cla(app.Options)
            if app.Input==1
            r=i ;
            high = 0;
            break
            end
        end
      elseif app.Grid == 2
     %% BASIC GRID %%
     app.Input = 0;
        for i=1:7
        rectrow(app.Basic,0,7-i,7);
        pause(app.R/2);
        ReadEMG(app);
        pause(app.R/2);
        ReadEMG(app);
        cla(app.Basic)
            if app.Input==1
            r=i ;
            high = 0;
            break
            end
        end
      else
        for i=1:9
        rectrow(app.Advanced, 0,9-i,6);
        pause(app.R/2);
        ReadEMG(app);
        pause(app.R/2);
        ReadEMG(app);
        cla(app.Advanced)
            if app.Input==1
            r=i ; 
            high = 0;
            break
            end
        end
      end
      
      while  app.Input==1
      if app.Grid == 1
           bean = bean + 1;
         if bean == 5
             bean=0;
             app.Input = 0;
             break
         end
         for j=1:2
         rectrow(app.Options,j-1,2-r,1);
         pause(app.R*1.5/2);
         ReadEMG(app);
         pause(app.R*1.5/2);
         ReadEMG(app);
         cla(app.Options)
            if app.Input==2
             c=j ;
            
                if GO(r,c)==0
                %% Option Grid Visibility %%
                app.opvis=0;
                app.Options.Visible = app.opvis;
                app.Options_Advanced.Visible = app.opvis;
                app.Options_Basic.Visible = app.opvis;
                app.Options_Cycle.Visible = app.opvis;
                app.Options_Exit.Visible = app.opvis;
                
                %% Basic Grid Visibility %%
                app.bavis = 1;
                app.Basic_Keys.Visible = app.bavis;
                app.Basic.Visible = app.bavis;
                
                
                %% ADVANCED GRID VISIBILITY %%
                app.advis = 0;
                app.Advanced_Keys.Visible = app.advis;
                app.Advanced.Visible = app.advis;
                app.Grid = 2;   
                end
                if GO(r,c)==1
                %% Option Grid Visibility %%
                app.opvis=0;
                app.Options.Visible = app.opvis;
                app.Options_Advanced.Visible = app.opvis;
                app.Options_Basic.Visible = app.opvis;
                app.Options_Cycle.Visible = app.opvis;
                app.Options_Exit.Visible = app.opvis;
                
                %% Basic Grid Visibility %%
                app.bavis = 0;
                app.Basic_Keys.Visible = app.bavis;
                app.Basic.Visible = app.bavis;
                
                
                %% ADVANCED GRID VISIBILITY %%
                app.advis = 1;
                app.Advanced_Keys.Visible = app.advis;
                app.Advanced.Visible = app.advis;
                app.Grid = 3;
                end
                if GO(r,c)==2
                    app.R = 1;
                end
                if G(r,c)==3
                    %EXIT?
                end
                app.Input = 0;
                bean = 0;
                break
            end
         end
      elseif app.Grid == 2
             bean = bean + 1;
         if bean == 4
             bean=0;
             app.Input = 0;
             break
         end
         for j=1:7
         rectrow(app.Basic,j-1,7-r,1);
         pause(app.R/2);
         ReadEMG(app);
         pause(app.R/2);
         ReadEMG(app);
         cla(app.Basic)
            if app.Input==2
             c=j ;
            
                if G(r,c)==0
                    app.TextArea.Value = [app.TextArea.Value{1} 'A'];
                    low = low + 1;
                end
                if G(r,c)==1
                    app.TextArea.Value = [app.TextArea.Value{1} 'B'];
                end
                if G(r,c)==2
                    app.TextArea.Value = [app.TextArea.Value{1} 'C'];
                end
                if G(r,c)==3
                    app.TextArea.Value = [app.TextArea.Value{1} 'D'];
                end
                if G(r,c)==4
                    app.TextArea.Value = [app.TextArea.Value{1} 'E'];
                end
                if G(r,c)==5
                    app.TextArea.Value = [app.TextArea.Value{1} 'F'];
                end
                if G(r,c)==6
                    app.TextArea.Value = [app.TextArea.Value{1} 'G'];
                end
                if G(r,c)==7
                    app.TextArea.Value = [app.TextArea.Value{1} 'H'];
                end
                if G(r,c)==8
                    app.TextArea.Value = [app.TextArea.Value{1} 'I'];
                end 
                if G(r,c)==9
                    app.TextArea.Value = [app.TextArea.Value{1} 'J'];
                end
                if G(r,c)==10
                    app.TextArea.Value = [app.TextArea.Value{1} 'K'];
                end
                if G(r,c)==11
                    app.TextArea.Value = [app.TextArea.Value{1} 'L'];
                end
                if G(r,c)==12
                    app.TextArea.Value = [app.TextArea.Value{1} 'M'];
                end
                if G(r,c)==13
                    app.TextArea.Value = [app.TextArea.Value{1} 'N'];
                end
                if G(r,c)==14
                    app.TextArea.Value = [app.TextArea.Value{1} 'O'];     
                end
                if G(r,c)==15
                    app.TextArea.Value = [app.TextArea.Value{1} 'P'];          
                end
                if G(r,c)==16
                    app.TextArea.Value = [app.TextArea.Value{1} 'Q'];
                end
                if G(r,c)==17
                    app.TextArea.Value = [app.TextArea.Value{1} 'R'];
                end
                if G(r,c)==18
                    app.TextArea.Value = [app.TextArea.Value{1} 'S'];
                end
                if G(r,c)==19
                    app.TextArea.Value = [app.TextArea.Value{1} 'T'];
                end
                if G(r,c)==20
                    app.TextArea.Value = [app.TextArea.Value{1} 'U'];
                end
                if G(r,c)==21
                    app.TextArea.Value = [app.TextArea.Value{1} 'V'];
                end
                if G(r,c)==22
                    app.TextArea.Value = [app.TextArea.Value{1} 'W'];
                end
                if G(r,c)==23
                    app.TextArea.Value = [app.TextArea.Value{1} 'X'];
                end
                if G(r,c)==24
                    app.TextArea.Value = [app.TextArea.Value{1} 'Y'];
                end
                if G(r,c)==25
                    app.TextArea.Value = [app.TextArea.Value{1} 'Z'];
                end
                if G(r,c)==26
                    app.TextArea.Value = '';
                end
                if G(r,c)==27
                    app.TextArea.Value = [app.TextArea.Value{1} ' '];
                end
                if G(r,c)==28
                    if strcmp(app.TextArea.Value,'')
                        app.TextArea.Value = 'ERROR No text to speak';
                        pause(4)
                        app.TextArea.Value = '';
                    else
                    word = char(app.TextArea.Value);
                    speechObjectGoogle = speechClient('Google','name','en-AU-Wavenet-C');
                    speechObjectGoogle.Options
                    [speech,fs] = text2speech(speechObjectGoogle,word);
                    sound(speech,fs)
                    end
                end
                if G(r,c)==29
                     app.save=1;
                     pause(1)
                        while  app.Insave==0
                            for i=1:2
                            rectrow(app.Basic,0,2-i,7);
                            pause(app.R);
                            cla(app.Basic)
                                if app.Insave==1
                                    r=i ;  
                                    break
                                end
                             end
                            while  app.Insave==1
                                for j=1:7
                                rectrow(app.Basic,j-1,2-r,1);
                                pause(app.R);
                                ReadEMG(app);
                                cla(app.Basic)
                                    if app.Insave==2
                                    c=j;
                                    if G(r,c)==0
                                    app.Phrase0.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==1
                                    app.Phrase1.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==2
                                    app.Phrase2.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==3
                                    app.Phrase3.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==4
                                    app.Phrase4.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==5
                                    app.Phrase5.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==6
                                    app.Phrase6.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==7
                                    app.Phrase7.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==8
                                    app.Phrase8.Value = char(app.TextArea.Value);
                                    end 
                                    if G(r,c)==9
                                    app.Phrase9.Value = char(app.TextArea.Value);
                                    end
                                    break
                                    end
                                 end
                             end
                         end
                    pause(1)
                    app.save=0;
                    app.Insave=0;
                end
                if G(r,c)==30
                    app.save=1;
                    pause(1)
                        while  app.Insave==0
                            for i=1:2
                            rectrow(app.Basic,0,2-i,7);
                            pause(app.R/2);
                            ReadEMG(app);
                            pause(app.R/2);
                            ReadEMG(app);
                            cla(app.Basic)
                                if app.Insave==1
                                    r=i ;  
                                    break
                                end
                             end
                            while  app.Insave==1
                                for j=1:7
                                rectrow(app.Basic,j-1,2-r,1);
                                pause(app.R/2);
                                ReadEMG(app);
                                pause(app.R/2);
                                ReadEMG(app);
                                cla(app.Basic)
                                    if app.Insave==2
                                    c=j;
                                    if G(r,c)==0
                                    app.TextArea.Value = char(app.Phrase0.Value);
                                    end
                                    if G(r,c)==1
                                    app.TextArea.Value = char(app.Phrase1.Value);
                                    end
                                    if G(r,c)==2
                                    app.TextArea.Value = char(app.Phrase2.Value);
                                    end
                                    if G(r,c)==3
                                    app.TextArea.Value = char(app.Phrase3.Value);
                                    end
                                    if G(r,c)==4
                                    app.TextArea.Value = char(app.Phrase4.Value);
                                    end
                                    if G(r,c)==5
                                    app.TextArea.Value = char(app.Phrase5.Value);
                                    end
                                    if G(r,c)==6
                                    app.TextArea.Value = char(app.Phrase6.Value);
                                    end
                                    if G(r,c)==7
                                    app.TextArea.Value = char(app.Phrase7.Value);
                                    end
                                    if G(r,c)==8
                                    app.TextArea.Value = char(app.Phrase8.Value);
                                    end 
                                    if G(r,c)==9
                                    app.TextArea.Value = char(app.Phrase9.Value);
                                    end
                                    break
                                    end
                                end
                            end
                        end
                end
                    pause(1)
                    app.save=0;
                    app.Insave=0;
                if G(r,c)==31
                    app.Threshold = str2double(char(app.TextArea.Value));
                    app.ThresholdheightSlider.Value = app.Threshold;
                end
                if G(r,c)==32
                    if app.R>0.1
                        app.R  = app.R - 0.1;
                    else 
                        app.R = 0.1;
                    end
                end
                if G(r,c)==33
                    if app.R<3
                        app.R  = app.R + 0.1;
                    else 
                        app.R = 3;
                    end
                end
                if G(r,c)==34
                %% Option Grid Visibility %%
                app.opvis=1;
                app.Options.Visible = app.opvis;
                app.Options_Advanced.Visible = app.opvis;
                app.Options_Basic.Visible = app.opvis;
                app.Options_Cycle.Visible = app.opvis;
                app.Options_Exit.Visible = app.opvis;
                
                %% Basic Grid Visibility %%
                app.bavis = 0;
                app.Basic_Keys.Visible = app.bavis;
                app.Basic.Visible = app.bavis;
                
                
                %% ADVANCED GRID VISIBILITY %%
                app.advis = 0;
                app.Advanced_Keys.Visible = app.advis;
                app.Advanced.Visible = app.advis;
                app.Grid = 1;
                end
                if G(r,c)==35
                    app.TextArea.Value = [app.TextArea.Value{1} '0'];
                end
                if G(r,c)==36
                    app.TextArea.Value = [app.TextArea.Value{1} '1'];
                end
                if G(r,c)==37
                    app.TextArea.Value = [app.TextArea.Value{1} '2'];
                end
                if G(r,c)==38
                    app.TextArea.Value = [app.TextArea.Value{1} '3'];
                end
                if G(r,c)==39
                    app.TextArea.Value = [app.TextArea.Value{1} '4'];
                end
                if G(r,c)==40
                    app.TextArea.Value = [app.TextArea.Value{1} '5'];
                end
                if G(r,c)==41
                    app.TextArea.Value = [app.TextArea.Value{1} '6'];
                end
                if G(r,c)==42
                    app.TextArea.Value = [app.TextArea.Value{1} '7'];
                end
                if G(r,c)==43
                   app.TextArea.Value = [app.TextArea.Value{1} '8'];
                end
                if G(r,c)==44
                   app.TextArea.Value = [app.TextArea.Value{1} '9'];
                end
                if G(r,c)==45
                   app.TextArea.Value = [app.TextArea.Value{1} '?'];
                end
                if G(r,c)==46
                    app.TextArea.Value = [app.TextArea.Value{1} '.'];
                end
                if G(r,c)==47
                    app.TextArea.Value = [app.TextArea.Value{1} ','];
                end
                if G(r,c)==48
                    app.TextArea.Value = [app.TextArea.Value{1} '!'];
                end
                app.CyclepausetimeSlider.Value = app.R;
                pause(1)
                app.Input = 0;
                bean = 0;
                break
         end
     end   
      else
             bean = bean + 1;
         if bean == 4
             bean=0;
             app.Input = 0;
             break
         end
         for j=1:6
         rectrow(app.Advanced,j-1,9-r,1);
         pause(app.R/2);
         ReadEMG(app);
         pause(app.R/2);
         ReadEMG(app);
         cla(app.Advanced)
            if app.Input==2
             c=j ;
            
                if GA(r,c)==0
                    app.TextArea.Value = [app.TextArea.Value{1} 'E'];
                    low = low + 1;
                end
                if GA(r,c)==1
                    app.TextArea.Value = [app.TextArea.Value{1} 'A'];
                end
                if GA(r,c)==2
                    app.TextArea.Value = [app.TextArea.Value{1} 'N'];
                end
                if GA(r,c)==3
                    app.TextArea.Value = [app.TextArea.Value{1} 'R'];
                end
                if GA(r,c)==4
                    app.TextArea.Value = [app.TextArea.Value{1} 'C'];
                end
                if GA(r,c)==5
                    app.TextArea.Value = [app.TextArea.Value{1} 'V'];
                end
                if GA(r,c)==6
                    app.TextArea.Value = [app.TextArea.Value{1} 'J'];
                end
                if GA(r,c)==7
                    app.TextArea.Value = [app.TextArea.Value{1} 'I'];
                end
                if GA(r,c)==8
                    app.TextArea.Value = [app.TextArea.Value{1} 'L'];
                end 
                if GA(r,c)==9
                    app.TextArea.Value = [app.TextArea.Value{1} 'P'];
                end
                if GA(r,c)==10
                    app.TextArea.Value = [app.TextArea.Value{1} 'H'];
                end
                if GA(r,c)==11
                    app.TextArea.Value = [app.TextArea.Value{1} 'W'];
                end
                if GA(r,c)==12
                    app.TextArea.Value = [app.TextArea.Value{1} 'S'];
                end
                if GA(r,c)==13
                    app.TextArea.Value = [app.TextArea.Value{1} 'U'];
                end
                if GA(r,c)==14
                    app.TextArea.Value = [app.TextArea.Value{1} 'D'];     
                end
                if GA(r,c)==15
                    app.TextArea.Value = [app.TextArea.Value{1} 'G'];          
                end
                if GA(r,c)==16
                    app.TextArea.Value = [app.TextArea.Value{1} 'K'];
                end
                if GA(r,c)==17
                    app.TextArea.Value = [app.TextArea.Value{1} '?'];
                end
                if GA(r,c)==18
                    app.TextArea.Value = [app.TextArea.Value{1} 'T'];
                end
                if GA(r,c)==19
                    app.TextArea.Value = [app.TextArea.Value{1} 'M'];
                end
                if GA(r,c)==20
                    app.TextArea.Value = [app.TextArea.Value{1} 'B'];
                end
                if GA(r,c)==21
                    app.TextArea.Value = [app.TextArea.Value{1} 'Z'];
                end
                if GA(r,c)==22
                    app.TextArea.Value = [app.TextArea.Value{1} 'Q'];
                end
                if GA(r,c)==23
                    app.TextArea.Value = [app.TextArea.Value{1} 'Y'];
                end
                if GA(r,c)==24
                    app.TextArea.Value = [app.TextArea.Value{1} 'O'];
                end
                if GA(r,c)==25
                    app.TextArea.Value = [app.TextArea.Value{1} 'F'];
                end
                if GA(r,c)==26
                    app.TextArea.Value = [app.TextArea.Value{1} 'X'];
                end
                if GA(r,c)==27
                    app.TextArea.Value = [app.TextArea.Value{1} '.'];
                end
                if GA(r,c)==28
                    app.TextArea.Value = [app.TextArea.Value{1} ','];
                end
                if GA(r,c)==29
                    app.TextArea.Value = [app.TextArea.Value{1} '!'];
                end
                if GA(r,c)==30
                    app.TextArea.Value = [app.TextArea.Value{1} ' '];
                end
                if GA(r,c)==31
                    app.TextArea.Value = '';
                end
                if GA(r,c)==32
                    if strcmp(app.TextArea.Value,'')
                        app.TextArea.Value = 'ERROR No text to speak';
                        pause(4)
                        app.TextArea.Value = '';
                    else
                    word = char(app.TextArea.Value);
                    speechObjectGoogle = speechClient('Google','name','en-AU-Wavenet-C');
                    speechObjectGoogle.Options
                    [speech,fs] = text2speech(speechObjectGoogle,word);
                    sound(speech,fs)
                    end
                end
                if GA(r,c)==33
                    app.TextArea.Value = [app.TextArea.Value{1} '='];
                end
                if GA(r,c)==34
                    app.TextArea.Value = [app.TextArea.Value{1} '('];
                end
                if GA(r,c)==35
                    app.TextArea.Value = [app.TextArea.Value{1} ')'];
                end
                if GA(r,c)==36
                    %% SAVE PHRASE %%
                     app.save=1;
                     pause(1)
                        while  app.Insave==0
                            for i=1:2
                            rectrow(0,2-i,7);
                            pause(app.R/2);
                            ReadEMG(app);
                            pause(app.R/2);
                            ReadEMG(app);
                            cla(app.Basic)
                                if app.Insave==1
                                    r=i ;  
                                    break
                                end
                             end
                            while  app.Insave==1
                                for j=1:7
                                rectrow(j-1,2-r,1);
                                pause(app.R/2);
                                ReadEMG(app);
                                pause(app.R/2);
                                ReadEMG(app);
                                cla(app.Basic)
                                    if app.Insave==2
                                    c=j;
                                    if G(r,c)==0
                                    app.Phrase0.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==1
                                    app.Phrase1.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==2
                                    app.Phrase2.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==3
                                    app.Phrase3.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==4
                                    app.Phrase4.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==5
                                    app.Phrase5.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==6
                                    app.Phrase6.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==7
                                    app.Phrase7.Value = char(app.TextArea.Value);
                                    end
                                    if G(r,c)==8
                                    app.Phrase8.Value = char(app.TextArea.Value);
                                    end 
                                    if G(r,c)==9
                                    app.Phrase9.Value = char(app.TextArea.Value);
                                    end
                                    break
                                    end
                                 end
                             end
                         end
                    pause(1)
                    app.save=0;
                    app.Insave=0;
                end
                if GA(r,c)==37
                    app.save=1;
                    pause(1)
                        while  app.Insave==0
                            for i=1:2
                            rectrow(app.Advanced,0,2-i,6);
                            pause(app.R/2);
                            ReadEMG(app);
                            pause(app.R/2);
                            ReadEMG(app);
                            cla(app.Advanced)
                                if app.Insave==1
                                    r=i ;  
                                    break
                                end
                             end
                            while  app.Insave==1
                                for j=1:6
                                rectrow(app.Advanced,j-1,2-r,1);
                                pause(app.R/2);
                                ReadEMG(app);
                                pause(app.R/2);
                                ReadEMG(app);
                                cla(app.Advanced)
                                    if app.Insave==2
                                    c=j;
                                    if GA(r,c)==0
                                    app.TextArea.Value = char(app.Phrase0.Value);
                                    end
                                    if GA(r,c)==1
                                    app.TextArea.Value = char(app.Phrase1.Value);
                                    end
                                    if GA(r,c)==2
                                    app.TextArea.Value = char(app.Phrase2.Value);
                                    end
                                    if GA(r,c)==3
                                    app.TextArea.Value = char(app.Phrase3.Value);
                                    end
                                    if GA(r,c)==4
                                    app.TextArea.Value = char(app.Phrase4.Value);
                                    end
                                    if GA(r,c)==5
                                    app.TextArea.Value = char(app.Phrase5.Value);
                                    end
                                    if GA(r,c)==6
                                    app.TextArea.Value = char(app.Phrase6.Value);
                                    end
                                    if GA(r,c)==7
                                    app.TextArea.Value = char(app.Phrase7.Value);
                                    end
                                    if GA(r,c)==8
                                    app.TextArea.Value = char(app.Phrase8.Value);
                                    end 
                                    if GA(r,c)==9
                                    app.TextArea.Value = char(app.Phrase9.Value);
                                    end
                                    break
                                    end
                                end
                            end
                        end
                end
                    pause(1)
                    app.save=0;
                    app.Insave=0;
                if GA(r,c)==38
                    app.Threshold = str2double(char(app.TextArea.Value));
                    app.ThresholdheightSlider.Value = app.Threshold;
                end
                if GA(r,c)==39
                    if app.R>0.1
                        app.R  = app.R - 0.1;
                    else 
                        app.R = 0.1;
                    end
                end
                if GA(r,c)==40
                    if app.R<5
                        app.R  = app.R + 0.1;
                    else 
                        app.R = 5;
                    end
                end
                if GA(r,c)==41
                %% Option Grid Visibility %%
                app.opvis=1;
                app.Options.Visible = app.opvis;
                app.Options_Advanced.Visible = app.opvis;
                app.Options_Basic.Visible = app.opvis;
                app.Options_Cycle.Visible = app.opvis;
                app.Options_Exit.Visible = app.opvis;
                
                %% Basic Grid Visibility %%
                app.bavis = 0;
                app.Basic_Keys.Visible = app.bavis;
                app.Basic.Visible = app.bavis;
                
                
                %% ADVANCED GRID VISIBILITY %%
                app.advis = 0;
                app.Advanced_Keys.Visible = app.advis;
                app.Advanced.Visible = app.advis;
                app.Grid = 1;
                end
                if GA(r,c)==42
                    app.TextArea.Value = [app.TextArea.Value{1} '0'];
                end
                if GA(r,c)==43
                   app.TextArea.Value = [app.TextArea.Value{1} '1'];
                end
                if GA(r,c)==44
                   app.TextArea.Value = [app.TextArea.Value{1} '2'];
                end
                if GA(r,c)==45
                   app.TextArea.Value = [app.TextArea.Value{1} '3'];
                end
                if GA(r,c)==46
                    app.TextArea.Value = [app.TextArea.Value{1} '4'];
                end
                if GA(r,c)==47
                    app.TextArea.Value = [app.TextArea.Value{1} '5'];
                end
                if GA(r,c)==48
                    app.TextArea.Value = [app.TextArea.Value{1} '6'];
                end
                if GA(r,c)==49
                    app.TextArea.Value = [app.TextArea.Value{1} '7'];
                end
                if GA(r,c)==50
                    app.TextArea.Value = [app.TextArea.Value{1} '8'];
                end
                if GA(r,c)==51
                    app.TextArea.Value = [app.TextArea.Value{1} '9'];
                end
                if GA(r,c)==52
                    app.TextArea.Value = [app.TextArea.Value{1} '+'];
                end
                if GA(r,c)==53
                    app.TextArea.Value = [app.TextArea.Value{1} '-'];
                end
                app.CyclepausetimeSlider.Value = app.R;
                pause(1)
                app.Input = 0;
                bean = 0;
                break
         end
         end
         end
      end   
 end
        end

        % Button pushed function: SpeakButton
        function SpeakButtonPushed(app, event)
            word = char(app.TextArea.Value);
            speechObjectGoogle = speechClient('Google','name','en-AU-Wavenet-C');
            speechObjectGoogle.Options
            [speech,fs] = text2speech(speechObjectGoogle,word);
            sound(speech,fs)
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create UIFigure and hide until all components are created
            app.UIFigure = uifigure('Visible', 'off');
            app.UIFigure.Color = [0.902 0.902 0.902];
            app.UIFigure.Position = [100 100 1036 746];
            app.UIFigure.Name = 'MATLAB App';

            % Create TextArea
            app.TextArea = uitextarea(app.UIFigure);
            app.TextArea.FontSize = 30;
            app.TextArea.Position = [18 612 1001 117];
            app.TextArea.Value = {'Initializing .....'};

            % Create InputButton
            app.InputButton = uibutton(app.UIFigure, 'push');
            app.InputButton.ButtonPushedFcn = createCallbackFcn(app, @InputButtonPushed, true);
            app.InputButton.BackgroundColor = [1 0.3098 0.3098];
            app.InputButton.Position = [35 148 972 38];
            app.InputButton.Text = 'Input';

            % Create CyclepausetimeSliderLabel
            app.CyclepausetimeSliderLabel = uilabel(app.UIFigure);
            app.CyclepausetimeSliderLabel.HorizontalAlignment = 'right';
            app.CyclepausetimeSliderLabel.Position = [214 200 111 56];
            app.CyclepausetimeSliderLabel.Text = 'Cycle pause time';

            % Create CyclepausetimeSlider
            app.CyclepausetimeSlider = uislider(app.UIFigure);
            app.CyclepausetimeSlider.Limits = [0.1 3];
            app.CyclepausetimeSlider.MajorTicks = [0.5 1 1.5 2 2.5 3 3.5 4 4.5 5];
            app.CyclepausetimeSlider.ValueChangedFcn = createCallbackFcn(app, @CyclepausetimeSliderValueChanged, true);
            app.CyclepausetimeSlider.Position = [115 267 325 3];
            app.CyclepausetimeSlider.Value = 1.5;

            % Create ThresholdheightSliderLabel
            app.ThresholdheightSliderLabel = uilabel(app.UIFigure);
            app.ThresholdheightSliderLabel.HorizontalAlignment = 'right';
            app.ThresholdheightSliderLabel.Position = [490 235 111 56];
            app.ThresholdheightSliderLabel.Text = 'Threshold height';

            % Create ThresholdheightSlider
            app.ThresholdheightSlider = uislider(app.UIFigure);
            app.ThresholdheightSlider.Limits = [0 11];
            app.ThresholdheightSlider.MajorTicks = [0 1 2 3 4 5 6 7 8 9 10 11];
            app.ThresholdheightSlider.Orientation = 'vertical';
            app.ThresholdheightSlider.ValueChangedFcn = createCallbackFcn(app, @ThresholdheightSliderValueChanged, true);
            app.ThresholdheightSlider.Position = [543 281 3 281];
            app.ThresholdheightSlider.Value = 8;

            % Create EMGvoltagemVEditFieldLabel
            app.EMGvoltagemVEditFieldLabel = uilabel(app.UIFigure);
            app.EMGvoltagemVEditFieldLabel.HorizontalAlignment = 'right';
            app.EMGvoltagemVEditFieldLabel.Position = [445 580 104 22];
            app.EMGvoltagemVEditFieldLabel.Text = 'EMG voltage (mV)';

            % Create mvnum
            app.mvnum = uieditfield(app.UIFigure, 'numeric');
            app.mvnum.Position = [564 580 100 22];

            % Create SpeakButton
            app.SpeakButton = uibutton(app.UIFigure, 'push');
            app.SpeakButton.ButtonPushedFcn = createCallbackFcn(app, @SpeakButtonPushed, true);
            app.SpeakButton.BackgroundColor = [0.9098 0.9098 0.3294];
            app.SpeakButton.Position = [35 97 971 39];
            app.SpeakButton.Text = 'Speak';

            % Create Label_15
            app.Label_15 = uilabel(app.UIFigure);
            app.Label_15.HorizontalAlignment = 'right';
            app.Label_15.Position = [758 547 25 22];
            app.Label_15.Text = '0';

            % Create Phrase0
            app.Phrase0 = uieditfield(app.UIFigure, 'text');
            app.Phrase0.Position = [798 547 222 22];
            app.Phrase0.Value = 'I need assistance';

            % Create Label_16
            app.Label_16 = uilabel(app.UIFigure);
            app.Label_16.HorizontalAlignment = 'right';
            app.Label_16.Position = [758 518 25 22];
            app.Label_16.Text = '1';

            % Create Phrase1
            app.Phrase1 = uieditfield(app.UIFigure, 'text');
            app.Phrase1.Position = [798 518 222 22];
            app.Phrase1.Value = 'I am thirsty';

            % Create Label_17
            app.Label_17 = uilabel(app.UIFigure);
            app.Label_17.HorizontalAlignment = 'right';
            app.Label_17.Position = [758 486 25 22];
            app.Label_17.Text = '2';

            % Create Phrase2
            app.Phrase2 = uieditfield(app.UIFigure, 'text');
            app.Phrase2.Position = [798 486 222 22];
            app.Phrase2.Value = 'I am Hungry';

            % Create Label_18
            app.Label_18 = uilabel(app.UIFigure);
            app.Label_18.HorizontalAlignment = 'right';
            app.Label_18.Position = [758 457 25 22];
            app.Label_18.Text = '3';

            % Create Phrase3
            app.Phrase3 = uieditfield(app.UIFigure, 'text');
            app.Phrase3.Position = [798 457 222 22];
            app.Phrase3.Value = 'I need the bathroom';

            % Create Label_19
            app.Label_19 = uilabel(app.UIFigure);
            app.Label_19.HorizontalAlignment = 'right';
            app.Label_19.Position = [758 429 25 22];
            app.Label_19.Text = '4';

            % Create Phrase4
            app.Phrase4 = uieditfield(app.UIFigure, 'text');
            app.Phrase4.Position = [798 429 222 22];
            app.Phrase4.Value = 'Hello';

            % Create Label_20
            app.Label_20 = uilabel(app.UIFigure);
            app.Label_20.HorizontalAlignment = 'right';
            app.Label_20.Position = [758 400 25 22];
            app.Label_20.Text = '5';

            % Create Phrase5
            app.Phrase5 = uieditfield(app.UIFigure, 'text');
            app.Phrase5.Position = [798 400 222 22];
            app.Phrase5.Value = 'Thank you ';

            % Create Label_21
            app.Label_21 = uilabel(app.UIFigure);
            app.Label_21.HorizontalAlignment = 'right';
            app.Label_21.Position = [757 372 25 22];
            app.Label_21.Text = '6';

            % Create Phrase6
            app.Phrase6 = uieditfield(app.UIFigure, 'text');
            app.Phrase6.Position = [797 372 222 22];
            app.Phrase6.Value = 'Please could you';

            % Create Label_22
            app.Label_22 = uilabel(app.UIFigure);
            app.Label_22.HorizontalAlignment = 'right';
            app.Label_22.Position = [758 343 25 22];
            app.Label_22.Text = '7';

            % Create Phrase7
            app.Phrase7 = uieditfield(app.UIFigure, 'text');
            app.Phrase7.Position = [798 343 222 22];
            app.Phrase7.Value = 'I am tired ';

            % Create Label_23
            app.Label_23 = uilabel(app.UIFigure);
            app.Label_23.HorizontalAlignment = 'right';
            app.Label_23.Position = [758 314 25 22];
            app.Label_23.Text = '8';

            % Create Phrase8
            app.Phrase8 = uieditfield(app.UIFigure, 'text');
            app.Phrase8.Position = [798 314 222 22];
            app.Phrase8.Value = 'Goodbye';

            % Create Label_24
            app.Label_24 = uilabel(app.UIFigure);
            app.Label_24.HorizontalAlignment = 'right';
            app.Label_24.Position = [758 286 25 22];
            app.Label_24.Text = '9';

            % Create Phrase9
            app.Phrase9 = uieditfield(app.UIFigure, 'text');
            app.Phrase9.Position = [798 286 222 22];
            app.Phrase9.Value = 'Knock knock';

            % Create EMGmvGaugeLabel
            app.EMGmvGaugeLabel = uilabel(app.UIFigure);
            app.EMGmvGaugeLabel.HorizontalAlignment = 'center';
            app.EMGmvGaugeLabel.Position = [753 248 60 22];
            app.EMGmvGaugeLabel.Text = 'EMG (mv)';

            % Create EMGmvGauge
            app.EMGmvGauge = uigauge(app.UIFigure, 'linear');
            app.EMGmvGauge.Limits = [0 11];
            app.EMGmvGauge.Orientation = 'vertical';
            app.EMGmvGauge.Position = [601 272 166 301];

            % Create Options_Basic
            app.Options_Basic = uilabel(app.UIFigure);
            app.Options_Basic.HorizontalAlignment = 'center';
            app.Options_Basic.FontSize = 18;
            app.Options_Basic.FontWeight = 'bold';
            app.Options_Basic.Position = [57 473 194 42];
            app.Options_Basic.Text = {'Classic Alphabet Grid'; '(Basic)'};

            % Create Options_Advanced
            app.Options_Advanced = uilabel(app.UIFigure);
            app.Options_Advanced.HorizontalAlignment = 'center';
            app.Options_Advanced.FontSize = 18;
            app.Options_Advanced.FontWeight = 'bold';
            app.Options_Advanced.Position = [309 473 174 42];
            app.Options_Advanced.Text = {'Code EJASINT Grid'; '(Advanced)'};

            % Create Options_Exit
            app.Options_Exit = uilabel(app.UIFigure);
            app.Options_Exit.HorizontalAlignment = 'center';
            app.Options_Exit.FontSize = 24;
            app.Options_Exit.FontWeight = 'bold';
            app.Options_Exit.Position = [348 333 106 68];
            app.Options_Exit.Text = 'Exit';

            % Create Options_Cycle
            app.Options_Cycle = uilabel(app.UIFigure);
            app.Options_Cycle.HorizontalAlignment = 'center';
            app.Options_Cycle.FontSize = 18;
            app.Options_Cycle.FontWeight = 'bold';
            app.Options_Cycle.Position = [85 361 165 22];
            app.Options_Cycle.Text = 'Reset Cycle speed';

            % Create Advanced_Keys
            app.Advanced_Keys = uiimage(app.UIFigure);
            app.Advanced_Keys.Visible = 'off';
            app.Advanced_Keys.Position = [12 280 514 322];
            app.Advanced_Keys.ImageSource = 'Advanced_Grid.png';

            % Create Basic_Keys
            app.Basic_Keys = uiimage(app.UIFigure);
            app.Basic_Keys.Visible = 'off';
            app.Basic_Keys.Position = [30 276 488 333];
            app.Basic_Keys.ImageSource = 'basic_grid.png';

            % Create Image
            app.Image = uiimage(app.UIFigure);
            app.Image.Position = [0 185 1038 580];
            app.Image.ImageSource = 'Infographic.png';

            % Create EMGinputSwitchLabel
            app.EMGinputSwitchLabel = uilabel(app.UIFigure);
            app.EMGinputSwitchLabel.HorizontalAlignment = 'center';
            app.EMGinputSwitchLabel.Position = [494 7 63 22];
            app.EMGinputSwitchLabel.Text = 'EMG input';

            % Create EMGinputSwitch
            app.EMGinputSwitch = uiswitch(app.UIFigure, 'slider');
            app.EMGinputSwitch.Items = {'On', 'Off'};
            app.EMGinputSwitch.Position = [502 44 45 20];

            % Create EMGreadingLampLabel
            app.EMGreadingLampLabel = uilabel(app.UIFigure);
            app.EMGreadingLampLabel.HorizontalAlignment = 'right';
            app.EMGreadingLampLabel.Position = [885 42 76 22];
            app.EMGreadingLampLabel.Text = 'EMG reading';

            % Create ReadyButton
            app.ReadyButton = uibutton(app.UIFigure, 'state');
            app.ReadyButton.Text = 'Ready';
            app.ReadyButton.BackgroundColor = [0.3922 0.8314 0.0745];
            app.ReadyButton.FontSize = 30;
            app.ReadyButton.Position = [35 97 973 89];

            % Create EMGreadingLamp
            app.EMGreadingLamp = uilamp(app.UIFigure);
            app.EMGreadingLamp.Position = [976 43 20 20];
            app.EMGreadingLamp.Color = [0.651 0.651 0.651];

            % Create BeginButton
            app.BeginButton = uibutton(app.UIFigure, 'state');
            app.BeginButton.ValueChangedFcn = createCallbackFcn(app, @BeginButtonValueChanged, true);
            app.BeginButton.Text = 'Begin';
            app.BeginButton.BackgroundColor = [0 0.4471 0.7412];
            app.BeginButton.FontSize = 30;
            app.BeginButton.FontColor = [1 1 1];
            app.BeginButton.Position = [34 97 973 89];

            % Create Basic
            app.Basic = uiaxes(app.UIFigure);
            title(app.Basic, 'Character grid')
            app.Basic.PlotBoxAspectRatio = [1.83399209486166 1 1];
            app.Basic.XLim = [0 7];
            app.Basic.YLim = [0 7];
            app.Basic.XTick = [1 2 3 4 5 6 7];
            app.Basic.XTickLabel = '';
            app.Basic.YTick = [1 2 3 4 5 6 7];
            app.Basic.YTickLabel = '';
            app.Basic.XGrid = 'on';
            app.Basic.YGrid = 'on';
            app.Basic.GridAlpha = 0.15;
            app.Basic.Visible = 'off';
            app.Basic.Position = [12 271 511 342];

            % Create Advanced
            app.Advanced = uiaxes(app.UIFigure);
            title(app.Advanced, 'Code EJASINT Grid')
            app.Advanced.PlotBoxAspectRatio = [1.83399209486166 1 1];
            app.Advanced.XLim = [0 6];
            app.Advanced.YLim = [0 9];
            app.Advanced.XTick = [1 2 3 4 5 6];
            app.Advanced.XTickLabel = '';
            app.Advanced.YTick = [1 2 3 4 5 6 7 8 9];
            app.Advanced.YTickLabel = '';
            app.Advanced.XGrid = 'on';
            app.Advanced.YGrid = 'on';
            app.Advanced.GridAlpha = 0.15;
            app.Advanced.Visible = 'off';
            app.Advanced.Position = [10 254 539 364];

            % Create Options
            app.Options = uiaxes(app.UIFigure);
            title(app.Options, 'Options Grid')
            app.Options.PlotBoxAspectRatio = [1.83399209486166 1 1];
            app.Options.XLim = [0 2];
            app.Options.YLim = [0 2];
            app.Options.XTick = [1 2 3 4 5 6];
            app.Options.XTickLabel = '';
            app.Options.YTick = [1 2 3 4 5 6 7 8 9];
            app.Options.YTickLabel = '';
            app.Options.XGrid = 'on';
            app.Options.YGrid = 'on';
            app.Options.GridAlpha = 0.15;
            app.Options.Position = [12 271 511 342];

            % Show the figure after all components are created
            app.UIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = gridapp

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.UIFigure)

            % Execute the startup function
            runStartupFcn(app, @startupFcn)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.UIFigure)
        end
    end
end
